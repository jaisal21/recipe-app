{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","ingredients","image","className","style","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","a","getRecipes","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAmBeA,EAhBA,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,MAAMC,EAA+B,EAA/BA,SAASC,EAAsB,EAAtBA,YAAYC,EAAU,EAAVA,MACxC,OACI,sBAAKC,UAAWC,IAAMN,OAAtB,UACI,6BAAKC,IACL,4BAAIC,IACJ,6BACKC,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAIxB,qBAAKC,IAAKN,EAAOO,IAAI,SC+ClBC,G,MAzDH,WAEV,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAKFC,oBAAS,sBAAE,sBAAAC,EAAA,sDACTC,IADS,2CAER,CAACJ,IAEJ,IAAMI,EAAU,uCAAG,8BAAAD,EAAA,sEACME,MAAM,mCAAD,OAAqCL,EAArC,mBAfb,WAea,oBAdZ,qCAaC,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAgBd,OACE,sBAAKtB,UAAU,MAAf,UACA,uBAAMuB,SAPQ,SAAAC,GAChBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAImBZ,UAAU,cAArC,UACE,uBACAA,UAAU,aACV0B,KAAK,OACLC,MAAOhB,EACPiB,SAhBc,SAAAJ,GACnBZ,EAAUY,EAAEK,OAAOF,UAgBd,wBAAQ3B,UAAU,gBAAgB0B,KAAK,SAAvC,uBAICjB,EAAQP,KAAI,SAAA4B,GAAM,OACjB,cAAC,EAAD,CAEAlC,MAAOkC,EAAOA,OAAOC,MACrBlC,SAAUiC,EAAOA,OAAOjC,SACxBE,MAAS+B,EAAOA,OAAO/B,MACvBD,YAAegC,EAAOA,OAAOhC,aAJtBgC,EAAOA,OAAOC,eCtCdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.2959e6c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\n\r\nconst Recipe = ({title,calories,ingredients,image}) =>{\r\n    return(\r\n        <div className={style.Recipe}>\r\n            <h1>{title}</h1>\r\n            <p>{calories}</p>\r\n            <ol>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>\r\n\r\n                ))}\r\n            </ol>\r\n            <img src={image} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React, { useEffect, useState } from \"react\";\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () => {\n\n  const APP_ID = \"d4049eef\";\n  const APP_KEY = \"626dfd8f424bb85f14b05db129bdc206\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState('chicken');\n\n \n \n\nuseEffect( async() => {\n  getRecipes();\n}, [query]);\n\nconst getRecipes = async () => {\n  const response = await fetch( `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n  const data = await response.json()\n  setRecipes(data.hits);\n\n};\n\nconst updateSearch =e =>{\n setSearch(e.target.value);\n}\n\nconst getSearch = e => {\n  e.preventDefault();\n  setQuery(search);\n  setSearch('');\n}\n  return (\n    <div className=\"App\">\n    <form onSubmit={getSearch} className=\"search-form\">\n      <input \n      className=\"search-bar\" \n      type=\"text\" \n      value={search} \n      onChange={updateSearch} />\n      <button className=\"search-button\" type=\"submit\">\n        Search\n        </button>\n      </form>\n      {recipes.map(recipe => (\n        <Recipe\n        key = {recipe.recipe.label}\n        title={recipe.recipe.label} \n        calories={recipe.recipe.calories}\n        image = {recipe.recipe.image}\n        ingredients = {recipe.recipe.ingredients} />\n      ))}\n    </div>\n\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Recipe\":\"recipe_Recipe__2a5Ci\"};"],"sourceRoot":""}